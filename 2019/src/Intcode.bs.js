// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Belt_List = require("bs-platform/lib/js/belt_List.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var Caml_int32 = require("bs-platform/lib/js/caml_int32.js");

function add(x, y) {
  return x + y | 0;
}

var mult = Caml_int32.imul;

function next(list) {
  var match = Belt_List.drop(list, 4);
  if (match !== undefined) {
    return match;
  } else {
    return /* [] */0;
  }
}

function computer(_slice, original) {
  while(true) {
    var slice = _slice;
    if (slice) {
      var switcher = slice[0] - 1 | 0;
      if (switcher === 0 || switcher === 1) {
        if (switcher !== 0) {
          var match = slice[1];
          if (match) {
            var match$1 = match[1];
            if (match$1) {
              var match$2 = match$1[1];
              if (match$2) {
                var result = Caml_int32.imul(Caml_array.caml_array_get(original, match[0]), Caml_array.caml_array_get(original, match$1[0]));
                Caml_array.caml_array_set(original, match$2[0], result);
                var rest = next(slice);
                var match$3 = List.length(rest) > 0;
                if (match$3) {
                  _slice = rest;
                  continue ;
                } else {
                  return original;
                }
              } else {
                console.log("Array was empty");
                return original;
              }
            } else {
              console.log("Array was empty");
              return original;
            }
          } else {
            console.log("Array was empty");
            return original;
          }
        } else {
          var match$4 = slice[1];
          if (match$4) {
            var match$5 = match$4[1];
            if (match$5) {
              var match$6 = match$5[1];
              if (match$6) {
                var result$1 = Caml_array.caml_array_get(original, match$4[0]) + Caml_array.caml_array_get(original, match$5[0]) | 0;
                Caml_array.caml_array_set(original, match$6[0], result$1);
                var rest$1 = next(slice);
                var match$7 = List.length(rest$1) > 0;
                if (match$7) {
                  _slice = rest$1;
                  continue ;
                } else {
                  return original;
                }
              } else {
                console.log("Array was empty");
                return original;
              }
            } else {
              console.log("Array was empty");
              return original;
            }
          } else {
            console.log("Array was empty");
            return original;
          }
        }
      } else if (switcher !== 98) {
        console.log("Array was empty");
        return original;
      } else {
        return original;
      }
    } else {
      console.log("Array was empty");
      return original;
    }
  };
}

var Intcode = {
  add: add,
  mult: mult,
  next: next,
  computer: computer
};

exports.Intcode = Intcode;
/* No side effect */
