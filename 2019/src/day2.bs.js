// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var Lib$AdventOfCode19 = require("./Lib.bs.js");
var Intcode$AdventOfCode19 = require("./Intcode.bs.js");

var memory = $$Array.map(Lib$AdventOfCode19.Lib.fromString, Curry._1(Lib$AdventOfCode19.Lib.openFile, "input2.txt").split(","));

function main(param) {
  for(var noun = 0; noun <= 99; ++noun){
    for(var verb = 0; verb <= 99; ++verb){
      var input = $$Array.copy(memory);
      Caml_array.caml_array_set(input, 1, noun);
      Caml_array.caml_array_set(input, 2, verb);
      var answer = Curry._2(Intcode$AdventOfCode19.Intcode.run, undefined, input);
      if (Caml_array.caml_array_get(answer, 0) === 19690720) {
        console.log("Found It!");
        console.log("noun:", noun, "verb:", verb);
      }
      
    }
  }
  return /* () */0;
}

main(/* () */0);

var Lib = Lib$AdventOfCode19.Lib;

var $$String = Intcode$AdventOfCode19.$$String;

var Intcode = Intcode$AdventOfCode19.Intcode;

exports.Lib = Lib;
exports.$$String = $$String;
exports.Intcode = Intcode;
exports.memory = memory;
exports.main = main;
/* memory Not a pure module */
